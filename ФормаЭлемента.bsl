
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		ЗаполнитьЗначенияСвойств(Объект, Параметры);
		Если НЕ ПустаяСтрока(Параметры.СВИФТБИК) Тогда
			СВИФТБИКИзменение(ЭтотОбъект);
		КонецЕсли;
		
		ЗаполнитьФормуПоОбъекту();
	КонецЕсли;
	
	УстановитьВидимостьБИКТОФК(ЭтотОбъект);
	
	#Область УХ_Интеграция
	ОбщегоНазначенияСерверУХ.ПоддержкаМультиязычностиУправлениеФормой(Элементы);
	#КонецОбласти
	
	УстановитьУсловноеОформление();
	
	// АФЛ Казначейство
	ОбновитьДоступностьЭлементовФормы(ЭтотОбъект, Объект);
	// АФЛ Казначейство
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НадежностьБанковКлиент.ПодключитьОбработчикПоказатьИнформациюНадежностьБанков(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// АФЛ Казначейство
	афлКазначействоМодификацияФормСервер.МодификацияФормы(ЭтотОбъект);
	// АФЛ Казначейство
	
	ЗаполнитьФормуПоОбъекту();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.РучноеИзменение = ?(РучноеИзменение = Неопределено, 2, РучноеИзменение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Оповещение   = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		СтандартнаяОбработка = Ложь;
		Закрыть(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СВИФТБИКПриИзменении(Элемент)
	
	СВИФТБИКИзменение(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КодПриИзменении(Элемент)
	
	НадежностьБанковКлиентСервер.ПолучитьИнформациюНадежностьБанков(ЭтотОбъект,
		Объект.Код,
		ПоказыватьИнформациюНадежностьБанков(ЭтотОбъект));
	
	УстановитьВидимостьБИКТОФК(ЭтотОбъект);
	
КонецПроцедуры

// АФЛ Казначейство
// 
// Параметры:
//  Элемент - ПолеФормы - Элемент
//
&НаКлиенте
Процедура афлСтатусЗаписиПриИзменении(Элемент)
	ОбновитьДоступностьЭлементовФормы(ЭтотОбъект, Объект);
КонецПроцедуры
// АФЛ Казначейство

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьБИКТОФК(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.ДекорацияБИКТОФК.Видимость = ЗначениеЗаполнено(Объект.Код) И БанковскиеПравила.ЭтоБИКТОФК(Объект.Код);
	
КонецПроцедуры

&НаКлиенте
Процедура СтранаПриИзменении(Элемент)
	// АФЛ Казначейство
	ЗаполнитьФормуПоОбъекту();
	// АФЛ Казначейство
КонецПроцедуры

&НаКлиенте
Процедура СтранаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.СтранаМираОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Изменить(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ВопросИзменитьЗавершение", ЭтотОбъект);
	
	Текст = НСтр("ru = 'Поставляемые данные обновляются автоматически.
		|После ручного изменения автоматическое обновление этого элемента производиться не будет.
		|Продолжить с изменением?'");
		
	ПоказатьВопрос(Оповещение, Текст, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзКлассификатора(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ВопросОбновитьИзКлассификатораЗавершение", ЭтотОбъект);
	
	Текст = НСтр("ru = 'Данные элемента будут заменены данными из классификатора.
		|Все ручные изменения будут потеряны. Продолжить?'");
		
	ПоказатьВопрос(Оповещение, Текст, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПараметрыЗаписи = Новый Структура("Закрыть", Истина);
		Если Записать(ПараметрыЗаписи) Тогда
			Закрыть();
		КонецЕсли;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	// Код банка.
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Код");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Страна", ВидСравненияКомпоновкиДанных.НеРавно, Справочники.СтраныМира.Россия);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь)
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СВИФТБИКИзменение(Форма)
	
	Объект = Форма.Объект;
	Объект.СВИФТБИК = ВРег(СокрЛП(Объект.СВИФТБИК));
	Если БанковскиеПравила.СтрокаСоответствуетФорматуSWIFT(Объект.СВИФТБИК) Тогда
		СтранаБанка = БанковскиеСчетаВызовСервера.СтранаПоSWIFT(Объект.СВИФТБИК);
		Если ЗначениеЗаполнено(СтранаБанка) Тогда
			Объект.Страна = СтранаБанка;
		КонецЕсли;
		
		ИзменитьРеквизитыЗависимыеОтСтраны(Форма);
	КонецЕсли;
	
КонецПроцедуры

// АФЛ Казначейство
&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьДоступностьЭлементовФормы(Форма, ТекущийОбъект)
	
	Элементы = Форма.Элементы;
	
	ИмяСвойстваДоступность = "Доступность";
	
	СтруктураДоступностиЭлементов = Новый Структура;
	
	Если Не ТекущийОбъект.афлСтатусЗаписи = ПредопределенноеЗначение("Перечисление.афлСтатусЗаписи.Дубль") Тогда
		Форма.Объект.афлЭталоннаяЗапись = ПредопределенноеЗначение("Справочник.Банки.ПустаяСсылка");
		СтруктураДоступностиЭлементов.Вставить("афлЭталоннаяЗапись", Ложь);
	Иначе
		СтруктураДоступностиЭлементов.Вставить("афлЭталоннаяЗапись", Истина);
	КонецЕсли;
	
	Для Каждого Стр Из СтруктураДоступностиЭлементов Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, Стр.Ключ,
			ИмяСвойстваДоступность, Стр.Значение);
	КонецЦикла;
	
КонецПроцедуры
// АФЛ Казначейство

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьРеквизитыЗависимыеОтСтраны(Форма)
	
	ЯвляетсяБанкомРФ = (Форма.Объект.Страна = Форма.СтранаРФ);
	
	Форма.Элементы.ТекстРучногоИзменения.Видимость = ЯвляетсяБанкомРФ;
	Форма.Элементы.ОбновитьИзКлассификатора.Видимость = ЯвляетсяБанкомРФ;
	Форма.Элементы.Изменить.Видимость = ЯвляетсяБанкомРФ;
	
	Если ЯвляетсяБанкомРФ Тогда
		Форма.Элементы.Код.Заголовок = НСтр("ru = 'БИК'");
	Иначе
		Форма.Элементы.Код.Заголовок = НСтр("ru = 'Национальный код'"); 
	КонецЕсли;
	
	НадежностьБанковКлиентСервер.ПолучитьИнформациюНадежностьБанков(Форма, 
		Форма.Объект.Код, 
		ПоказыватьИнформациюНадежностьБанков(Форма));
	
	// АФЛ Казначейство
	Элементы	= Форма.Элементы;
	Объект		= Форма.Объект;
	
	ИмяСвойстваДоступность = "Доступность";
	
	СтруктураДоступностиЭлементов = Новый Структура;
	
	Если Объект.Страна = Форма.афлСтранаСША Тогда
		
		СтруктураДоступностиЭлементов.Вставить("афлКодABA", Истина);
		
		СтруктураДоступностиЭлементов.Вставить("афлИНН", 	Ложь);
		СтруктураДоступностиЭлементов.Вставить("афлКПП", 	Ложь);
		
	ИначеЕсли Объект.Страна = Форма.СтранаРФ Тогда
		
		СтруктураДоступностиЭлементов.Вставить("афлИНН", 	Истина);
		СтруктураДоступностиЭлементов.Вставить("афлКПП", 	Истина);
		
		СтруктураДоступностиЭлементов.Вставить("афлКодABA", Ложь);
		
	Иначе
		
		СтруктураДоступностиЭлементов.Вставить("афлКодABA", Ложь);
		СтруктураДоступностиЭлементов.Вставить("афлИНН", 	Ложь);
		СтруктураДоступностиЭлементов.Вставить("афлКПП", 	Ложь);
		
	КонецЕсли;
	
	Для Каждого Стр Из СтруктураДоступностиЭлементов Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, Стр.Ключ,
			ИмяСвойстваДоступность, Стр.Значение);
	КонецЦикла;
	// АФЛ Казначейство
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормуПоОбъекту()
	
	МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Справочники.Банки);
	РаботаСБанкамиБП.СчитатьФлагРучногоИзменения(ЭтотОбъект, МожноРедактировать);
	
	Элементы.НадписьДеятельностьБанкаПрекращена.Видимость = ДеятельностьПрекращена;
	
	СтранаРФ = Справочники.СтраныМира.Россия;
	
	// АФЛ Казначейство
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СтраныМира.Ссылка
		|ИЗ
		|	Справочник.СтраныМира КАК СтраныМира
		|ГДЕ
		|	СтраныМира.КодАльфа3 = ""USA""";
	
	Выборка = Запрос.Выполнить().Выгрузить();
	
	Если Выборка.Количество() <> 0 Тогда
		ЭтотОбъект.афлСтранаСША = Выборка[0].Ссылка;
	Иначе
		ЭтотОбъект.афлСтранаСША = Неопределено;
	КонецЕсли;
	// АФЛ Казначейство
	
	ИзменитьРеквизитыЗависимыеОтСтраны(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросИзменитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаблокироватьДанныеФормыДляРедактирования();
		Модифицированность = Истина;
		РучноеИзменение    = Истина;
		РаботаСБанкамиКлиентПереопределяемый.ОбработатьФлагРучногоИзменения(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОбновитьИзКлассификатораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаблокироватьДанныеФормыДляРедактирования();
		Модифицированность = Истина;
		ОбновитьНаСервере();
		ОповеститьОбИзменении(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	
	РаботаСБанкамиБП.ВосстановитьЭлементИзОбщихДанных(ЭтотОбъект);
	
	НадежностьБанковКлиентСервер.ПолучитьИнформациюНадежностьБанков(ЭтотОбъект, 
		Объект.Код, 
		ПоказыватьИнформациюНадежностьБанков(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПоказыватьИнформациюНадежностьБанков(Форма)

	Если Форма.ДеятельностьПрекращена 
		ИЛИ Форма.Объект.Страна <> Форма.СтранаРФ Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПоказатьИнформациюНадежностьБанков()
	
	НадежностьБанковКлиент.ПоказатьИнформациюНадежностьБанков(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти
