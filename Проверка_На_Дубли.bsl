
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			
		// Создаем массив для хранения уникальных значений
		УникальныеЗначения = Новый Массив;
		
		// Создаем массив для хранения дублирующих строк
		Дубли = Новый Массив;
		
		// Помещаем в массив ТЧ документа
		ТабличныеЧастиДокумента = Новый Массив;
		ТабличныеЧастиДокумента.Добавить(Объект.СчетаУчетаРасчетаСКонтрагентами);
		ТабличныеЧастиДокумента.Добавить(Объект.СчетаУчетаФинансовогоОбеспеченияПолученного);
		
		Для Каждого ТабличнаяЧасть Из ТабличныеЧастиДокумента Цикл
			
			ДублиТабличнойЧасти = ПроверитьДублиВТабличнойЧасти(УникальныеЗначения, Дубли, ТабличнаяЧасть);
			
			// Обработка найденных дублей
			Если ДублиТабличнойЧасти.Количество() > 0 Тогда
				
				Отказ = Истина;
				
				Для Каждого Дубль Из ДублиТабличнойЧасти Цикл
					
					ШаблонСообщения = НСтр("ru= 'Такой код счета [%1] уже присутствует в табличной части %2'"); // Сообщение выводится нормально, кроме второго параметра
					СообщениеСтр = СтрШаблон(ШаблонСообщения, Дубль.КодСчета, Объект.ТабличнаяЧасть); // Тут не получается указать нужную Таблицу
					
					Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст = СообщениеСтр;
					Сообщение.Поле 	= "Объект.ТабличнаяЧасть[Дубль.НомерСтроки].КодСчета"; // Здесь не получается строку с дубликатом показать пользователю
					
					Сообщение.Сообщить();
					
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПроверитьДублиВТабличнойЧасти(УникальныеЗначения, Дубли, ТабличнаяЧасть)
	
	Дубли.Очистить();
	
	// Проходим по всем строкам табличной части
	Для Каждого Строка Из ТабличнаяЧастьЗначение Цикл
		
		Значение = Строка.КодСчета;
		
		// Проверяем, есть ли уже такое значение в массиве уникальных значений
		Если УникальныеЗначения.Найти(Значение) = Неопределено Тогда
			
			// Если нет, добавляем его в массив уникальных значений
			УникальныеЗначения.Добавить(Значение);
		Иначе
			
			// Если значение уже есть, добавляем строку в массив дублирующих строк
			Дубли.Добавить(Строка);
		
		КонецЕсли;
	КонецЦикла;
	
	Возврат Дубли;
	
КонецФункции